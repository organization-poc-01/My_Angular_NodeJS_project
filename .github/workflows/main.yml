name: Node.js CI/CD

# on:
#   push:
#     branches: [ "dev", "uat", "prod" ]
#   pull_request:
#     branches: [ "dev", "uat", "prod" ]

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
  IMAGE_NAME: nodejs-app
jobs:
  build:
    runs-on: self-hosted 

    environment:
      name: ${{ github.ref_name }}

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci
    
    - name: Build Application
      run: npm run build --if-present 
    
    - name: Run Tests
      run: npm test
      if: always()

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: self-hosted

    environment:
      name: ${{ github.ref_name }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: Create Namespace (if it doesn't exist)
      run: |
        kubectl create namespace ${{ github.ref_name }} || echo "Namespace already exists"

    - name: Deploy to AKS
      uses: azure/k8s-deploy@v4
      with:
        namespace: ${{ github.ref_name }} 
        manifests: |
          k8s/deployment.yaml             # Replace with the path to your deployment YAML file
          k8s/service.yaml                # Replace with the path to your service YAML file
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
