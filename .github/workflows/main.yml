name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AKS_CLUSTER_NAME: aks-gagan-poc-eus-001
  AKS_RESOURCE_GROUP: gagan-rg
  REGISTRY_NAME: gagan01
  IMAGE_NAME: nodejs-app
  NODE_VERSION: '18.x'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Clear node_modules
      run: |
        rm -rf node_modules
        rm -f package-lock.json
    
    - name: Install Dependencies
      run: |
        npm cache clean --force
        npm install
        npm install -g @angular/cli
        npm install express
    
    - name: Lint
      run: npm run lint
    
    - name: Run Unit Tests
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless
    
    - name: Build
      run: npm run build --prod
    
    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-and-modules
        path: |
          dist/
          node_modules/
          package.json
          package-lock.json
          server.js

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-and-modules

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: Create Namespace
      run: |
        kubectl create namespace angularapp

    - name: Deploy to AKS
      uses: azure/k8s-deploy@v4
      with:
        namespace: angularapp
        manifests: |
          deploments/Deploy.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
